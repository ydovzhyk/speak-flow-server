name: Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACTIONS_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3.6.0
        with:
          node-version: "16.x"

      - name: Install dependencies
        run: npm install

      - name: Create and update .env file
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> .env
          echo "REFRESH_SECRET_KEY=${{ secrets.REFRESH_SECRET_KEY }}" >> .env
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
          echo "BASE_URL_HEROKU=${{ secrets.BASE_URL_HEROKU }}" >> .env
          echo "GPT_API_KEY=${{ secrets.GPT_API_KEY }}" >> .env
          echo "DEEPGRAM_API_KEY=${{ secrets.DEEPGRAM_API_KEY }}" >> .env
          echo "HEROKU_API_KEY=${{ secrets.HEROKU_API_KEY }}" >> .env
        working-directory: .

      - name: Build Docker image
        run: docker build -t yuriydovzhyk/speak-flow-server:latest .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: yuriydovzhyk/speak-flow-server:latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN_GITHUB }}

      - name: Push Docker image to GitHub Container Registry
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/speak-flow-server:latest

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      # (необов'язково, але корисно перевірити, що ключ валідний)
      - name: Heroku auth check
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku auth:whoami

      # Логін у Container Registry (використає HEROKU_API_KEY)
      - name: Login to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      - name: Push to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:push web -a speak-flow-server

      - name: Release to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:release web -a speak-flow-server
